// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(UmagDbContext))]
    [Migration("20250819112211_DodajNapomenaUZadaci")]
    partial class DodajNapomenaUZadaci
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PocetniDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrivitakNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivitakPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RazlogIzostanka")
                        .HasColumnType("int");

                    b.Property<DateTime>("ZavrsniDatum")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Kalendari");
                });

            modelBuilder.Entity("Planiranje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PocetniDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrivitakPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Smjena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StrojId")
                        .HasColumnType("int");

                    b.Property<string>("VrstaZadataka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ZavrsniDatum")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("StrojId");

                    b.ToTable("Planiranja");
                });

            modelBuilder.Entity("RadniNalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrojRN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumPrijave")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVrijemeDodjele")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVrijemePreuzimanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumZatvaranja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DodijeljenoId")
                        .HasColumnType("int");

                    b.Property<string>("NacinRjesavanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obrazlozenje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OdjelPrijaveId")
                        .HasColumnType("int");

                    b.Property<int?>("OdradioId")
                        .HasColumnType("int");

                    b.Property<string>("OpisKvara")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OtklonitiDo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Potpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivitakPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RDIFOPrema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SatiRada")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StrojId")
                        .HasColumnType("int");

                    b.Property<string>("StupanjHitnosti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TehnoloskaOznaka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UstanovioId")
                        .HasColumnType("int");

                    b.Property<string>("UtrosenoMaterijala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VrstaNaloga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZaOdjel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DodijeljenoId");

                    b.HasIndex("OdjelPrijaveId");

                    b.HasIndex("OdradioId");

                    b.HasIndex("StrojId");

                    b.HasIndex("UstanovioId");

                    b.ToTable("RadniNalozi");
                });

            modelBuilder.Entity("backend.Models.Korisnici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktivan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("BrojKartice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("DatumRodenja")
                        .HasColumnType("date");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Korisnik")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varbinary(255)");

                    b.Property<byte[]>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varbinary(255)");

                    b.Property<string>("Odjel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Potpis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RazinaPristupa")
                        .HasColumnType("int");

                    b.Property<int?>("UkupnoDanaGo")
                        .HasColumnType("int");

                    b.Property<int?>("UkupnoDanaStarogGo")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ZaposlenOd")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__Korisnic__3214EC2782069455");

                    b.ToTable("Korisnici", (string)null);
                });

            modelBuilder.Entity("backend.Models.Obavijesti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktivno")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DatumObjave")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImeObavijesti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Obavijesti");
                });

            modelBuilder.Entity("backend.Models.OdjelPrijave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktivan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__OdjelPri__3214EC272213897F");

                    b.ToTable("OdjelPrijave", (string)null);
                });

            modelBuilder.Entity("backend.Models.RadniNalogSudionik", b =>
                {
                    b.Property<int>("RadniNalogId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("RadniNalogId", "KorisnikId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("RadniNalogSudionik");
                });

            modelBuilder.Entity("backend.Models.Strojevi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktivan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("GodinaProizvodnje")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Odjel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("Privitak")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Proizvodac")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("UpogonuOd")
                        .HasColumnType("date")
                        .HasColumnName("UPogonuOd");

                    b.HasKey("Id")
                        .HasName("PK__Strojevi__3214EC27E3AC053A");

                    b.ToTable("Strojevi", (string)null);
                });

            modelBuilder.Entity("backend.Models.ZaOdjel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktivan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__ZaOdjel__3214EC2712040936");

                    b.ToTable("ZaOdjel", (string)null);
                });

            modelBuilder.Entity("backend.Models.Zadaci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Broj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Djelatnik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElePoz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odjel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisRada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProstorRada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SatiRada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Smjena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UgradeniDijelovi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zadaci");
                });

            modelBuilder.Entity("Kalendar", b =>
                {
                    b.HasOne("backend.Models.Korisnici", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Planiranje", b =>
                {
                    b.HasOne("backend.Models.Korisnici", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Strojevi", "Stroj")
                        .WithMany()
                        .HasForeignKey("StrojId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Stroj");
                });

            modelBuilder.Entity("RadniNalog", b =>
                {
                    b.HasOne("backend.Models.Korisnici", "Dodijeljeno")
                        .WithMany()
                        .HasForeignKey("DodijeljenoId");

                    b.HasOne("backend.Models.OdjelPrijave", "OdjelPrijave")
                        .WithMany()
                        .HasForeignKey("OdjelPrijaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Korisnici", "Odradio")
                        .WithMany()
                        .HasForeignKey("OdradioId");

                    b.HasOne("backend.Models.Strojevi", "Stroj")
                        .WithMany()
                        .HasForeignKey("StrojId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Korisnici", "Ustanovio")
                        .WithMany()
                        .HasForeignKey("UstanovioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dodijeljeno");

                    b.Navigation("OdjelPrijave");

                    b.Navigation("Odradio");

                    b.Navigation("Stroj");

                    b.Navigation("Ustanovio");
                });

            modelBuilder.Entity("backend.Models.RadniNalogSudionik", b =>
                {
                    b.HasOne("backend.Models.Korisnici", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RadniNalog", "RadniNalog")
                        .WithMany("Sudjelovali")
                        .HasForeignKey("RadniNalogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("RadniNalog");
                });

            modelBuilder.Entity("RadniNalog", b =>
                {
                    b.Navigation("Sudjelovali");
                });
#pragma warning restore 612, 618
        }
    }
}
